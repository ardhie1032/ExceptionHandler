{"name":"Exceptionhandler","tagline":"A PHP Exception Handler to Post Exceptions to a Slack Channel","body":"ExceptionHandler\r\n================\r\n\r\nA PHP Exception Handler to Post Exceptions to a Slack Channel\r\n\r\n## Installation\r\n\r\n* make sure your PHP Installation has `curl` loaded\r\n* create a Channel on Slack\r\n* create an Incoming Webook for your Slack Channel & copy the Integration Token.\r\n* add the [Packagist Package](https://packagist.org/packages/hexa2k9/exception-handler) to your `composer.json`\r\n* run `composer update`\r\n\r\n## Configuration\r\n\r\nYou need to configure this Class before you can use it:\r\n\r\n```php\r\nExceptionHandler::configure(\r\n    array(\r\n        'username'       => 'company',                  // Your Slack Subdomain (e.g. company.slack.com)\r\n        'token'          => '<your token>',             // The Slack Integration Token\r\n        'data_path'      => '/tmp',                     // The Path to store full Exception Traces in\r\n        'webhookChannel' => '#exceptions',              // Your Slack Channel\r\n        'webhookUser'    => 'exception',                // The Username who will post Messages\r\n        'webhookIcon'    => ':ghost:',                  // The Icon for the Username (can be :ghost: or an URL)\r\n        'hostname'       => php_uname('n'),             // The Hostname your Application is running on\r\n        'version'        => '1.0.0',                    // Your Application Version\r\n        'env'            => 'production'                // The Applications Environment (e.g. production or development)\r\n    )\r\n);\r\n```\r\n\r\nAnd finally set the Exception Handler:\r\n\r\n```php\r\nset_exception_handler(array('\\ExceptionHandler', 'handleException'));\r\n```\r\n\r\nYou will start to get Messages like these in your Channel:\r\n\r\n> chrisbookair.local/2.0.81@development: uncaught Exception in file /Users/christian/Code/PhpstormProjects/api-v2/app/Classes/Util/GeneralUtility.php on line 581 (Code: 8 - Trace: handleException.1395606690.trace.532f44a20d0cc.txt): Memcache::connect(): Server 127.0.0.1 (tcp 11211) failed with: Connection refused (61)\r\n\r\nExceptionHandler will quit your current Applications run and returns a `json_encode()`d Message\r\n\r\n```json\r\n{\r\n  \"status\": 500,\r\n  \"message\": \"Okay, Houston, we've had a problem here. -- Don't panic. The Team has been notified.\"\r\n}\r\n```\r\n\r\n## other Usage\r\n\r\nBy default this ExceptionHandler will care about uncaught Exceptions. If you want to send Slack Messages for Exceptions you handled you can use this like `\\ExceptionHandler::handleException($exception, true);` to get notified. ExceptionHandler will not `die()` in this case.\r\n\r\nYou can even use ExdeptionHandler to just send Notifications. This feels a little weired however: `\\ExceptionHandler::handleException(new \\Exception('I\\'m some text to send to Slack.'), true)`;\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}